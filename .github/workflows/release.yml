name: Release

on:
  workflow_dispatch:

jobs:   
  release:
    name: release (${{ matrix.target }})
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        target: [x86_64-unknown-linux-gnu]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      BUILD_ARTIFACT_PATH: /home/runner/work/dump-env/dump-env
      ARCHIVE_PATH: /home/runner/work/dump-env/dump-env_${{ matrix.target }}.tar.gz
      RUSTV: ${{ matrix.rust }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: test
        run: make build-all-tests && make run-all-tests
      - name: build release
        run: cargo build --release --target ${{ matrix.target }}
      - name: archive
        run: tar -czvf $ARCHIVE_PATH $BUILD_ARTIFACT_PATH
      - name: Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: $ARCHIVE_PATH
     
